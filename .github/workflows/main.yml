name: Main CI workflow

on:
  push:

jobs:
  backend-test:
    name: Lint and test backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Python dependencies
        working-directory: backend/src
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --no-cache-dir -r requirements.txt

      - name: Run Black
        working-directory: backend/src
        run: black --check .

      - name: Run Pytest
        working-directory: backend/src
        run: python3 -m pytest
        
  frontend-test:
    name: Lint frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23.5

      - name: Install dependencies and run linting
        working-directory: frontend
        run: | 
          yarn install
          npx eslint .

  deploy-backend:
    name: Build and deploy backend
    needs:
      - backend-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Python dependencies
        working-directory: backend/src
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --no-cache-dir -r requirements.txt

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1 

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      #  CI-dedicated script because of building multi-platform images
      - name: Build and push backend
        run: backend/deployment/build_and_push_ci.sh

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Update backend image
        working-directory: infrastructure/backend
        run: |
          terraform init
          terraform apply --auto-approve -var "image_selection=:$(git rev-parse --short HEAD)" -var "anthropic_api_key=${{ secrets.ANTHROPIC_API_KEY }}"

  deploy-frontend:
    name: Build and deploy frontend
    runs-on: ubuntu-latest
    needs: 
      - frontend-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1 

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Run frontend stack
        working-directory: infrastructure/frontend
        run: |
          terraform init
          terraform apply --auto-approve

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23.5

      - name: Install Node dependencies
        working-directory: frontend
        run: yarn install

      - name: Build and push frontend
        run: |
          REACT_APP_API_URL="${{ secrets.BACKEND_URL }}" frontend/deployment/build.sh
          frontend/deployment/push.sh

  e2e-tests:
    name: E2E test on deployment
    needs: 
      - deploy-backend
      - deploy-frontend
    uses: ./.github/workflows/e2e.yml
    secrets:
      FRONTEND_URL: "${{ secrets.FRONTEND_URL }}"


